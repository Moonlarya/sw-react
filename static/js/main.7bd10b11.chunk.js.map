{"version":3,"sources":["theme.ts","pages/Characters/CharCard.tsx","pages/Characters/Characters.tsx","pages/Planets/PlanetCard.tsx","pages/Planets/Planets.tsx","pages/Main/Main.tsx","App.tsx","index.tsx"],"names":["theme","createMuiTheme","palette","primary","main","grey","secondary","CharCard","name","gender","birth_year","Card","className","CardContent","Typography","variant","component","color","gutterBottom","CardActions","size","api","Characters","state","characters","episode","isLoading","loadInfo","a","axios","get","info","Promise","all","data","map","el","replace","then","response","charArr","setState","handleChange","event","target","value","this","to","FormControl","InputLabel","id","Select","labelId","onChange","label","MenuItem","key","Component","PlanetCard","Planets","planets","pageNumber","hasNext","hasPrevious","url","params","page","results","next","previous","nextPage","setPage","previousPage","onClick","disabled","length","Main","ThemeProvider","App","exact","path","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.7bd10b11.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: grey[900],\r\n    },\r\n    secondary: {\r\n      main: \"#f44336\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React, { FC } from \"react\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport \"./styles.scss\";\r\n\r\ninterface ICharCardProps {\r\n  name: string;\r\n  gender?: \"male\" | \"female\" | \"n/a\";\r\n  birth_year: string;\r\n}\r\n\r\nconst CharCard: FC<ICharCardProps> = ({ name, gender, birth_year }) => (\r\n  <Card className=\"card\">\r\n    <CardContent>\r\n      <Typography variant=\"h5\" component=\"h2\">\r\n        {name}\r\n      </Typography>\r\n      <Typography color=\"textSecondary\" gutterBottom>\r\n        {gender}\r\n      </Typography>\r\n    </CardContent>\r\n    <CardActions>\r\n      <Button size=\"small\">Learn More</Button>\r\n    </CardActions>\r\n  </Card>\r\n);\r\n\r\nexport default CharCard;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport Button from \"@material-ui/core/Button/Button\";\r\n\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport CharCard from \"./CharCard\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst api = \"https://swapi.dev/api/\";\r\n\r\nclass Characters extends Component {\r\n  state = {\r\n    characters: null,\r\n    episode: null,\r\n    isLoading: false,\r\n  };\r\n  loadInfo = async () => {\r\n    const { episode } = this.state;\r\n    const info = await axios.get(`${api}films/${episode}/`);\r\n\r\n    const charArr = await Promise.all(\r\n      info.data.characters.map((el) =>\r\n        axios.get(el.replace(\"http\", \"https\")).then((response) => ({\r\n          name: response.data.name,\r\n          birth_year: response.data.birth_year,\r\n          gender: response.data.gender,\r\n        }))\r\n      )\r\n    );\r\n    this.setState({ characters: charArr });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ episode: event.target.value }, () => this.loadInfo());\r\n  };\r\n\r\n  render() {\r\n    const { characters, episode } = this.state;\r\n    return (\r\n      <>\r\n        <Link to=\"/\">\r\n          <Button variant=\"contained\" color=\"primary\" size=\"large\">\r\n            ←\r\n          </Button>\r\n        </Link>\r\n        <FormControl variant=\"outlined\">\r\n          <InputLabel id=\"demo-simple-select-outlined-label\">Епізод</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-outlined-label\"\r\n            id=\"demo-simple-select-outlined\"\r\n            value={episode}\r\n            onChange={this.handleChange}\r\n            label=\"Оберіть епізод\"\r\n          >\r\n            <MenuItem value={1}>\r\n              Зоряні війни: Епізод 1 – Прихована загроза\r\n            </MenuItem>\r\n            <MenuItem value={2}>Зоряні війни: Епізод 2 – Атака клонів</MenuItem>\r\n            <MenuItem value={3}>\r\n              Зоряні війни: Епізод 3 – Помста Ситхів\r\n            </MenuItem>\r\n            <MenuItem value={4}>Зоряні війни: Епізод 4 – Нова надія</MenuItem>\r\n            <MenuItem value={5}>\r\n              Зоряні війни: Епізод 5 – Імперія завдає удар\r\n            </MenuItem>\r\n            <MenuItem value={6}>\r\n              Зоряні війни: Епізод 6 – Повернення Джедая\r\n            </MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <div className=\"card-list\">\r\n          {characters &&\r\n            characters.map((el) => (\r\n              <CharCard\r\n                key={el.name}\r\n                name={el.name}\r\n                gender={el.gender}\r\n                birth_year={el.birth_year}\r\n              ></CharCard>\r\n            ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Characters;\r\n","import React, { FC } from \"react\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\ninterface IPlanetCardProps {\r\n  name: string;\r\n}\r\n\r\nconst PlanetCard: FC<IPlanetCardProps> = ({ name }) => (\r\n  <Card className=\"card\">\r\n    <CardContent>\r\n      <Typography variant=\"h5\" component=\"h2\">\r\n        {name}\r\n      </Typography>\r\n      <Typography color=\"textSecondary\" gutterBottom></Typography>\r\n    </CardContent>\r\n    <CardActions>\r\n      <Button size=\"small\">Learn More</Button>\r\n    </CardActions>\r\n  </Card>\r\n);\r\n\r\nexport default PlanetCard;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport PlanetCard from \"./PlanetCard\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst api = \"https://swapi.dev/api/\";\r\n\r\nclass Planets extends Component {\r\n  state = {\r\n    planets: [],\r\n    pageNumber: null,\r\n    isLoading: false,\r\n    hasNext: false,\r\n    hasPrevious: false,\r\n  };\r\n\r\n  loadInfo = async (pageNumber = 1) => {\r\n    try {\r\n      this.setState({ isLoading: true });\r\n      const response = await axios({\r\n        url: `${api}planets/`,\r\n        params: {\r\n          page: pageNumber,\r\n        },\r\n      });\r\n\r\n      const { results } = response.data;\r\n\r\n      this.setState({ planets: results, pageNumber });\r\n\r\n      if (response.data.next) {\r\n        this.setState({ hasNext: true });\r\n      } else {\r\n        this.setState({ hasNext: false });\r\n      }\r\n\r\n      if (response.data.previous) {\r\n        this.setState({ hasPrevious: true });\r\n      } else {\r\n        this.setState({ hasPrevious: false });\r\n      }\r\n    } catch {\r\n      this.setState({\r\n        planets: [],\r\n        pageNumber,\r\n        hasNext: false,\r\n        hasPrevious: false,\r\n        isLoading: false,\r\n      });\r\n    } finally {\r\n      this.setState({ isLoading: false });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadInfo();\r\n  }\r\n\r\n  nextPage = () => {\r\n    const { pageNumber } = this.state;\r\n\r\n    this.setPage(pageNumber + 1);\r\n  };\r\n\r\n  previousPage = () => {\r\n    const { pageNumber } = this.state;\r\n\r\n    this.setPage(pageNumber - 1);\r\n  };\r\n\r\n  setPage = (page: number) => {\r\n    this.setState({ pageNumber: page }, () => {\r\n      this.loadInfo(page);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { planets, isLoading, pageNumber, hasNext, hasPrevious } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Link to=\"/\">\r\n          <Button variant=\"contained\" color=\"primary\" size=\"large\">\r\n            ←\r\n          </Button>\r\n        </Link>\r\n        <div className=\"button-panel\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={this.previousPage}\r\n            disabled={!hasPrevious}\r\n          >\r\n            ←\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={this.nextPage}\r\n            disabled={!hasNext}\r\n          >\r\n            →\r\n          </Button>\r\n        </div>\r\n        <h1>Сторінка {pageNumber}</h1>\r\n        <div className=\"card-list\">\r\n          {!isLoading &&\r\n            planets.map((el) => <PlanetCard key={el.name} name={el.name} />)}\r\n\r\n          {!isLoading && planets.length === 0 && <h1>No data exists</h1>}\r\n\r\n          {isLoading && <h1>Spinner</h1>}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Planets;\r\n","import React, { FC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport theme from \"../../theme\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst Main: FC<{}> = () => (\r\n  <ThemeProvider theme={theme}>\r\n    <Link to=\"/characters\">\r\n      <Button variant=\"contained\" color=\"primary\">\r\n        Персонажі\r\n      </Button>\r\n    </Link>\r\n    <Link to=\"/planets\">\r\n      <Button variant=\"contained\" color=\"primary\">\r\n        Планети\r\n      </Button>\r\n    </Link>\r\n  </ThemeProvider>\r\n);\r\n\r\nexport default Main;\r\n","import React from \"react\";\n\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { Main, Characters, Planets } from \"./pages\";\n\nconst App = () => {\n  return (\n    <main>\n      <Switch>\n        <Route exact path=\"/\" component={Main} />\n        <Route path=\"/characters\" component={Characters} />\n        <Route path=\"/planets\" component={Planets} />\n      </Switch>\n    </main>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme\";\n\nimport App from \"./App\";\nimport \"./styles.scss\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}